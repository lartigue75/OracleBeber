from flask import Flask, render_template, request, redirect, url_for, session
import os
import openai
import random

app = Flask(__name__)
app.secret_key = 'b√©ber-et-l√©onie'

openai.api_key = os.environ.get("OPENAI_API_KEY")

# ROUTE D'ACCUEIL
@app.route('/')
def accueil():
    return '''
    <h2 style="text-align:center;">Bienvenue dans l'antre des visions</h2>
    <div style="text-align:center; margin-top:20px;">
        <a href="/beber" style="font-size:20px; margin-right:20px;">üßô‚Äç‚ôÇÔ∏è Consulter B√©ber</a>
        <a href="/leonie" style="font-size:20px;">üîÆ Consulter L√©onie</a>
    </div>
    '''

# ORACLE B√âBER
STYLES_PERSONNAGES = [
    "Le Chapelier Fou d'Alice au pays des merveilles",
    "Le Chat de Cheshire, myst√©rieux et ironique",
    "La Reine de C≈ìur, autoritaire et excessive",
    "La Pythie de Delphes, en transe proph√©tique",
    "Merlin l'enchanteur, un brin farceur mais sage"
]

TONALITES = [
    "positive", "positive", "positive",
    "n√©gative", "n√©gative",
    "mitig√©e"
]

@app.route('/beber', methods=['GET', 'POST'])
def beber():
    if request.method == 'POST':
        question = request.form.get("question", "").strip()
        if question:
            style = random.choice(STYLES_PERSONNAGES)
            tonalite = random.choice(TONALITES)
            intro = f"Pour te r√©pondre, B√©ber convoque {style}.\n{style}, dans un souffle, murmure :"

            prompt = f"""
            Tu es un oracle inspir√© par {style}.
            Tu r√©ponds √† la question suivante avec une tonalit√© {tonalite}.
            - Sois bref (1 ou 2 phrases max)
            - Pas de g√©n√©ralit√©s ou banalit√©s
            - Adopte un ton marqu√© par ton personnage : exag√©r√©, myst√©rieux, absurde ou inqui√©tant
            - √âvite les r√©p√©titions ou les formules creuses

            Question : {question}
            R√©ponds :
            """

            try:
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": "Tu es un oracle incarn√© par un personnage fantasque ou mystique. Tu r√©ponds bri√®vement et avec un ton tranch√©."},
                        {"role": "user", "content": prompt.strip()}
                    ],
                    max_tokens=100,
                    temperature=1.2,
                )
                texte = response.choices[0].message['content'].strip()
                session['answer'] = texte
                session['intro'] = intro
            except Exception as e:
                session['answer'] = "B√©ber s‚Äôest emm√™l√© les neurones (erreur OpenAI)."
                session['intro'] = ""
        return redirect(url_for('beber'))

    answer = session.pop('answer', None)
    intro = session.pop('intro', None)
    return render_template('index.html', answer=answer, intro=intro)


# ORACLE L√âONIE
@app.route('/leonie', methods=['GET', 'POST'])
def leonie():
    if request.method == 'POST':
        question = request.form.get("question", "").strip()
        if question:
            intro = "L√©onie ferme les yeux‚Ä¶ un symbole lui appara√Æt."
            answer = get_leonie_answer(question)
            session['answer'] = answer
            session['intro'] = intro
        return redirect(url_for('leonie'))

    answer = session.pop('answer', None)
    intro = session.pop('intro', None)
    return render_template('index2.html', answer=answer, intro=intro)

def get_leonie_answer(question):
    prompt = f"""
    Tu es une femme nomm√©e L√©onie, intuitive et sensible. Tu ne te pr√©tends pas oracle.
    Tu parles normalement, mais parfois tu re√ßois des images ou des symboles que tu traduis √† ta fa√ßon.
    Tu n‚Äôes pas s√ªre de toi, mais tu dis ce qui te vient, sans chercher √† convaincre.

    Question : {question}
    R√©ponse :
    """

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "Tu es L√©onie, une femme intuitive qui parle doucement, avec des visions floues qu'elle tente de comprendre."},
                {"role": "user", "content": prompt.strip()}
            ],
            max_tokens=100,
            temperature=1.1,
        )
        return response.choices[0].message['content'].strip()
    except Exception as e:
        return "L√©onie ne parvient pas √† voir clairement pour le moment."

if __name__ == '__main__':
    import os
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)
